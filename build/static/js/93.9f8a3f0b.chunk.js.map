{"version":3,"file":"static/js/93.9f8a3f0b.chunk.js","mappings":"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","sources":["utils/performanceOptimization.ts","microfrontends/Drivers.tsx","components/Card.tsx"],"sourcesContent":["// Performance optimization utilities\r\nexport interface CacheConfig {\r\n  maxAge: number; // seconds\r\n  maxSize: number; // MB\r\n  strategy: 'memory' | 'localStorage' | 'sessionStorage';\r\n}\r\n\r\nexport interface NetworkConfig {\r\n  timeout: number; // milliseconds\r\n  retries: number;\r\n  retryDelay: number; // milliseconds\r\n}\r\n\r\n// Simple in-memory cache\r\nclass MemoryCache {\r\n  private cache = new Map<string, { data: any; timestamp: number; size: number }>();\r\n  private maxSize: number;\r\n  private maxAge: number;\r\n\r\n  constructor(maxSize: number = 50, maxAge: number = 3600) {\r\n    this.maxSize = maxSize * 1024 * 1024; // Convert MB to bytes\r\n    this.maxAge = maxAge * 1000; // Convert seconds to milliseconds\r\n  }\r\n\r\n  set(key: string, data: any, size: number = 0): void {\r\n    const timestamp = Date.now();\r\n    \r\n    // Remove expired entries\r\n    this.cleanup();\r\n    \r\n    // Check if adding this item would exceed max size\r\n    if (this.getCurrentSize() + size > this.maxSize) {\r\n      this.evictOldest();\r\n    }\r\n    \r\n    this.cache.set(key, { data, timestamp, size });\r\n  }\r\n\r\n  get(key: string): any | null {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Check if expired\r\n    if (Date.now() - item.timestamp > this.maxAge) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  has(key: string): boolean {\r\n    return this.get(key) !== null;\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n\r\n  private cleanup(): void {\r\n    const now = Date.now();\r\n    this.cache.forEach((item, key) => {\r\n      if (now - item.timestamp > this.maxAge) {\r\n        this.cache.delete(key);\r\n      }\r\n    });\r\n  }\r\n\r\n  private evictOldest(): void {\r\n    let oldestKey: string | null = null;\r\n    let oldestTime = Date.now();\r\n    \r\n    this.cache.forEach((item, key) => {\r\n      if (item.timestamp < oldestTime) {\r\n        oldestTime = item.timestamp;\r\n        oldestKey = key;\r\n      }\r\n    });\r\n    \r\n    if (oldestKey) {\r\n      this.cache.delete(oldestKey);\r\n    }\r\n  }\r\n\r\n  private getCurrentSize(): number {\r\n    let totalSize = 0;\r\n    this.cache.forEach((item) => {\r\n      totalSize += item.size;\r\n    });\r\n    return totalSize;\r\n  }\r\n}\r\n\r\n// Network performance utilities\r\nexport class NetworkOptimizer {\r\n  private cache: MemoryCache;\r\n  private config: NetworkConfig;\r\n\r\n  constructor(cacheConfig: CacheConfig, networkConfig: NetworkConfig) {\r\n    this.cache = new MemoryCache(cacheConfig.maxSize, cacheConfig.maxAge);\r\n    this.config = networkConfig;\r\n  }\r\n\r\n  // Optimized fetch with caching and retries\r\n  async fetchWithCache(url: string, options: RequestInit = {}): Promise<Response> {\r\n    const cacheKey = this.generateCacheKey(url, options);\r\n    \r\n    // Check cache first\r\n    const cachedResponse = this.cache.get(cacheKey);\r\n    if (cachedResponse) {\r\n      return new Response(JSON.stringify(cachedResponse), {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Fetch with retries\r\n    let lastError: Error;\r\n    for (let attempt = 0; attempt <= this.config.retries; attempt++) {\r\n      try {\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), this.config.timeout);\r\n        \r\n        const response = await fetch(url, {\r\n          ...options,\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        // Cache successful response\r\n        const data = await response.clone().json();\r\n        this.cache.set(cacheKey, data, JSON.stringify(data).length);\r\n        \r\n        return response;\r\n      } catch (error) {\r\n        lastError = error as Error;\r\n        if (attempt < this.config.retries) {\r\n          await this.delay(this.config.retryDelay * Math.pow(2, attempt)); // Exponential backoff\r\n        }\r\n      }\r\n    }\r\n    \r\n    throw lastError!;\r\n  }\r\n\r\n  // Preload critical resources\r\n  async preloadResources(urls: string[]): Promise<void> {\r\n    const promises = urls.map(url => {\r\n      const link = document.createElement('link');\r\n      link.rel = 'preload';\r\n      link.href = url;\r\n      link.as = this.getResourceType(url);\r\n      document.head.appendChild(link);\r\n      \r\n      return new Promise<void>((resolve) => {\r\n        link.onload = () => resolve();\r\n        link.onerror = () => resolve(); // Don't fail on preload errors\r\n      });\r\n    });\r\n    \r\n    await Promise.all(promises);\r\n  }\r\n\r\n  // Optimize for mobile networks\r\n  isSlowConnection(): boolean {\r\n    if (typeof navigator === 'undefined') return false;\r\n    \r\n    const connection = (navigator as any).connection;\r\n    if (!connection) return false;\r\n    \r\n    return connection.effectiveType === 'slow-2g' || \r\n           connection.effectiveType === '2g' || \r\n           connection.effectiveType === '3g' ||\r\n           connection.saveData === true;\r\n  }\r\n\r\n  // Get appropriate quality based on connection\r\n  getOptimalQuality(): number {\r\n    if (this.isSlowConnection()) {\r\n      return 60; // Lower quality for slow connections\r\n    }\r\n    return 80; // Default quality\r\n  }\r\n\r\n  // Generate cache key\r\n  private generateCacheKey(url: string, options: RequestInit): string {\r\n    const method = options.method || 'GET';\r\n    const body = options.body ? JSON.stringify(options.body) : '';\r\n    return `${method}:${url}:${body}`;\r\n  }\r\n\r\n  // Get resource type for preloading\r\n  private getResourceType(url: string): string {\r\n    const extension = url.split('.').pop()?.toLowerCase();\r\n    switch (extension) {\r\n      case 'js': return 'script';\r\n      case 'css': return 'style';\r\n      case 'jpg':\r\n      case 'jpeg':\r\n      case 'png':\r\n      case 'webp':\r\n      case 'avif': return 'image';\r\n      case 'woff':\r\n      case 'woff2': return 'font';\r\n      default: return 'fetch';\r\n    }\r\n  }\r\n\r\n  // Delay utility\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n\r\n// Mobile-specific optimizations\r\nexport class MobileOptimizer {\r\n  // Check if device is mobile\r\n  static isMobile(): boolean {\r\n    if (typeof window === 'undefined') return false;\r\n    return window.innerWidth < 768;\r\n  }\r\n\r\n  // Check if device supports touch\r\n  static isTouchDevice(): boolean {\r\n    if (typeof window === 'undefined') return false;\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n  }\r\n\r\n  // Get optimal image size for device\r\n  static getOptimalImageSize(): { width: number; height: number } {\r\n    if (this.isMobile()) {\r\n      return { width: 300, height: 300 }; // Smaller for mobile\r\n    }\r\n    return { width: 600, height: 600 }; // Larger for desktop\r\n  }\r\n\r\n  // Optimize for mobile performance\r\n  static optimizeForMobile(): void {\r\n    if (!this.isMobile()) return;\r\n    \r\n    // Reduce animations on mobile\r\n    document.documentElement.style.setProperty('--animation-duration', '0.2s');\r\n    \r\n    // Optimize touch targets\r\n    const touchTargets = document.querySelectorAll('button, a, input, select, textarea');\r\n    touchTargets.forEach(element => {\r\n      const rect = element.getBoundingClientRect();\r\n      if (rect.height < 44 || rect.width < 44) {\r\n        element.classList.add('min-h-[44px]', 'min-w-[44px]');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Service Worker utilities for offline support\r\nexport class ServiceWorkerManager {\r\n  static async register(): Promise<void> {\r\n    if (typeof navigator === 'undefined' || !('serviceWorker' in navigator)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      console.log('Service Worker registered:', registration);\r\n    } catch (error) {\r\n      console.error('Service Worker registration failed:', error);\r\n    }\r\n  }\r\n\r\n  static async unregister(): Promise<void> {\r\n    if (typeof navigator === 'undefined' || !('serviceWorker' in navigator)) {\r\n      return;\r\n    }\r\n\r\n    const registrations = await navigator.serviceWorker.getRegistrations();\r\n    for (const registration of registrations) {\r\n      await registration.unregister();\r\n    }\r\n  }\r\n}\r\n\r\n// Performance monitoring\r\nexport class PerformanceMonitor {\r\n  private metrics: Map<string, number[]> = new Map();\r\n\r\n  // Measure function execution time\r\n  measure(name: string, fn: () => any): any {\r\n    const start = performance.now();\r\n    const result = fn();\r\n    const end = performance.now();\r\n    \r\n    this.recordMetric(name, end - start);\r\n    return result;\r\n  }\r\n\r\n  // Measure async function execution time\r\n  async measureAsync(name: string, fn: () => Promise<any>): Promise<any> {\r\n    const start = performance.now();\r\n    const result = await fn();\r\n    const end = performance.now();\r\n    \r\n    this.recordMetric(name, end - start);\r\n    return result;\r\n  }\r\n\r\n  // Record performance metric\r\n  recordMetric(name: string, value: number): void {\r\n    if (!this.metrics.has(name)) {\r\n      this.metrics.set(name, []);\r\n    }\r\n    this.metrics.get(name)!.push(value);\r\n  }\r\n\r\n  // Get average metric\r\n  getAverageMetric(name: string): number {\r\n    const values = this.metrics.get(name);\r\n    if (!values || values.length === 0) return 0;\r\n    \r\n    return values.reduce((sum, value) => sum + value, 0) / values.length;\r\n  }\r\n\r\n  // Get all metrics\r\n  getAllMetrics(): Record<string, number> {\r\n    const result: Record<string, number> = {};\r\n    this.metrics.forEach((_, name) => {\r\n      result[name] = this.getAverageMetric(name);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  // Clear metrics\r\n  clearMetrics(): void {\r\n    this.metrics.clear();\r\n  }\r\n}\r\n\r\n// Export default instances\r\nexport const networkOptimizer = new NetworkOptimizer(\r\n  { maxAge: 3600, maxSize: 50, strategy: 'memory' },\r\n  { timeout: 10000, retries: 3, retryDelay: 1000 }\r\n);\r\n\r\nexport const performanceMonitor = new PerformanceMonitor();\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from '../components/Card';\r\nimport ShimmerUI from '../components/ShimmerUI';\r\nimport OptimizedImage from '../components/OptimizedImage';\r\nimport { MobileOptimizer, performanceMonitor } from '../utils/performanceOptimization';\r\n\r\ninterface Driver {\r\n  id: number;\r\n  name: string;\r\n  team: string;\r\n  country: string;\r\n  number: number;\r\n  points: number;\r\n  position: number;\r\n  wins: number;\r\n  podiums: number;\r\n  image?: string;\r\n}\r\n\r\nconst Drivers: React.FC = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [drivers, setDrivers] = useState<Driver[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [selectedTeam, setSelectedTeam] = useState<string>('all');\r\n\r\n  useEffect(() => {\r\n    // Optimize for mobile performance\r\n    MobileOptimizer.optimizeForMobile();\r\n    \r\n    // Simulate API call with performance monitoring\r\n    const loadDrivers = async () => {\r\n      const driversData = await performanceMonitor.measureAsync('drivers-load', async () => {\r\n        // Simulate API delay\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n        \r\n        return [\r\n          {\r\n            id: 1,\r\n            name: 'Max Verstappen',\r\n            team: 'Red Bull Racing',\r\n            country: 'Netherlands',\r\n            number: 1,\r\n            points: 85,\r\n            position: 1,\r\n            wins: 3,\r\n            podiums: 5,\r\n            image: 'https://images.unsplash.com/photo-1560272564-c83b66b1ad12?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Charles Leclerc',\r\n            team: 'Ferrari',\r\n            country: 'Monaco',\r\n            number: 16,\r\n            points: 72,\r\n            position: 2,\r\n            wins: 1,\r\n            podiums: 4,\r\n            image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Lando Norris',\r\n            team: 'McLaren',\r\n            country: 'United Kingdom',\r\n            number: 4,\r\n            points: 58,\r\n            position: 3,\r\n            wins: 0,\r\n            podiums: 3,\r\n            image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 4,\r\n            name: 'Carlos Sainz',\r\n            team: 'Ferrari',\r\n            country: 'Spain',\r\n            number: 55,\r\n            points: 55,\r\n            position: 4,\r\n            wins: 1,\r\n            podiums: 3,\r\n            image: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 5,\r\n            name: 'George Russell',\r\n            team: 'Mercedes',\r\n            country: 'United Kingdom',\r\n            number: 63,\r\n            points: 47,\r\n            position: 5,\r\n            wins: 0,\r\n            podiums: 2,\r\n            image: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 6,\r\n            name: 'Lewis Hamilton',\r\n            team: 'Mercedes',\r\n            country: 'United Kingdom',\r\n            number: 44,\r\n            points: 42,\r\n            position: 6,\r\n            wins: 0,\r\n            podiums: 1,\r\n            image: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 7,\r\n            name: 'Oscar Piastri',\r\n            team: 'McLaren',\r\n            country: 'Australia',\r\n            number: 81,\r\n            points: 38,\r\n            position: 7,\r\n            wins: 0,\r\n            podiums: 1,\r\n            image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop&crop=face'\r\n          },\r\n          {\r\n            id: 8,\r\n            name: 'Fernando Alonso',\r\n            team: 'Aston Martin',\r\n            country: 'Spain',\r\n            number: 14,\r\n            points: 33,\r\n            position: 8,\r\n            wins: 0,\r\n            podiums: 1,\r\n            image: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop&crop=face'\r\n          }\r\n        ];\r\n      });\r\n      \r\n      setDrivers(driversData);\r\n      setLoading(false);\r\n    };\r\n\r\n    loadDrivers();\r\n  }, []);\r\n\r\n  const teams = ['all', ...Array.from(new Set(drivers.map(driver => driver.team)))];\r\n\r\n  const filteredDrivers = drivers.filter(driver => {\r\n    const matchesSearch = driver.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         driver.team.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesTeam = selectedTeam === 'all' || driver.team === selectedTeam;\r\n    return matchesSearch && matchesTeam;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">F1 Drivers</h1>\r\n          <p className=\"text-gray-600\">Formula 1 driver profiles and statistics</p>\r\n        </div>\r\n        <ShimmerUI type=\"driver\" count={8} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto mobile-padding\">\r\n      <div className=\"mb-6 sm:mb-8\">\r\n        <h1 className=\"text-responsive-xl font-bold text-gray-900 mb-2\">F1 Drivers</h1>\r\n        <p className=\"text-responsive text-gray-600\">Formula 1 driver profiles and statistics</p>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"mb-6 flex flex-col sm:flex-row gap-4\">\r\n        <div className=\"flex-1\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search drivers or teams...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"input-field\"\r\n          />\r\n        </div>\r\n        <div className=\"sm:w-48\">\r\n          <select\r\n            value={selectedTeam}\r\n            onChange={(e) => setSelectedTeam(e.target.value)}\r\n            className=\"input-field\"\r\n          >\r\n            {teams.map(team => (\r\n              <option key={team} value={team}>\r\n                {team === 'all' ? 'All Teams' : team}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Drivers Grid */}\r\n      <div className=\"responsive-grid gap-4 sm:gap-6\">\r\n                 {filteredDrivers.map((driver) => (\r\n           <Card\r\n             key={driver.id}\r\n             header={`#${driver.number} ${driver.name}`}\r\n             image={driver.image}\r\n             imageAlt={`${driver.name} - ${driver.team}`}\r\n             className=\"hover:scale-105 transition-transform duration-200\"\r\n           >\r\n             <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center text-lg font-bold border-2 border-primary-200\">\r\n                    {driver.number}\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"font-semibold text-lg\">{driver.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">{driver.team}</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-2xl font-bold text-primary-600\">{driver.position}</div>\r\n                  <div className=\"text-xs text-gray-500\">Position</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                <div>\r\n                  <div className=\"text-lg font-bold text-green-600\">{driver.points}</div>\r\n                  <div className=\"text-xs text-gray-500\">Points</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-lg font-bold text-yellow-600\">{driver.wins}</div>\r\n                  <div className=\"text-xs text-gray-500\">Wins</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-lg font-bold text-orange-600\">{driver.podiums}</div>\r\n                  <div className=\"text-xs text-gray-500\">Podiums</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-gray-600\">🇳🇱 {driver.country}</span>\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                  driver.position <= 3 ? 'bg-yellow-100 text-yellow-800' :\r\n                  driver.position <= 10 ? 'bg-green-100 text-green-800' :\r\n                  'bg-gray-100 text-gray-800'\r\n                }`}>\r\n                  {driver.position <= 3 ? 'Top 3' : \r\n                   driver.position <= 10 ? 'Points' : 'Outside Points'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {filteredDrivers.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-gray-400 text-6xl mb-4\">🏎️</div>\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No drivers found</h3>\r\n          <p className=\"text-gray-600\">Try adjusting your search criteria</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drivers;\r\n","import React from 'react';\r\n\r\ninterface CardProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  hover?: boolean;\r\n  header?: React.ReactNode;\r\n  footer?: React.ReactNode;\r\n  image?: string;\r\n  imageAlt?: string;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({ \r\n  children, \r\n  className = '', \r\n  onClick, \r\n  hover = true,\r\n  header,\r\n  footer,\r\n  image,\r\n  imageAlt = ''\r\n}) => {\r\n  const baseClasses = \"card\";\r\n  const hoverClasses = hover ? \"hover:shadow-lg cursor-pointer\" : \"\";\r\n  const combinedClasses = `${baseClasses} ${hoverClasses} ${className}`.trim();\r\n\r\n  return (\r\n    <div className={combinedClasses} onClick={onClick}>\r\n      {image && (\r\n        <div className=\"mb-4\">\r\n          <img \r\n            src={image} \r\n            alt={imageAlt} \r\n            className=\"w-full h-48 object-cover rounded-lg\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {header && (\r\n        <div className=\"card-header\">\r\n          {header}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex-1\">\r\n        {children}\r\n      </div>\r\n      \r\n      {footer && (\r\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n          {footer}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["MemoryCache","constructor","maxSize","arguments","length","undefined","maxAge","cache","Map","this","set","key","data","size","timestamp","Date","now","cleanup","getCurrentSize","evictOldest","get","item","delete","has","clear","forEach","oldestKey","oldestTime","totalSize","MobileOptimizer","isMobile","window","innerWidth","isTouchDevice","navigator","maxTouchPoints","getOptimalImageSize","width","height","optimizeForMobile","document","documentElement","style","setProperty","querySelectorAll","element","rect","getBoundingClientRect","classList","add","cacheConfig","networkConfig","config","fetchWithCache","url","options","cacheKey","generateCacheKey","cachedResponse","Response","JSON","stringify","headers","lastError","attempt","retries","controller","AbortController","timeoutId","setTimeout","abort","timeout","response","fetch","_objectSpread","signal","clearTimeout","ok","Error","concat","status","statusText","clone","json","error","delay","retryDelay","Math","pow","preloadResources","urls","promises","map","link","createElement","rel","href","as","getResourceType","head","appendChild","Promise","resolve","onload","onerror","all","isSlowConnection","connection","effectiveType","saveData","getOptimalQuality","method","body","_url$split$pop","split","pop","toLowerCase","ms","strategy","performanceMonitor","metrics","measure","name","fn","start","performance","result","end","recordMetric","measureAsync","value","push","getAverageMetric","values","reduce","sum","getAllMetrics","_","clearMetrics","Drivers","loading","setLoading","useState","drivers","setDrivers","searchTerm","setSearchTerm","selectedTeam","setSelectedTeam","useEffect","async","driversData","id","team","country","number","points","position","wins","podiums","image","loadDrivers","teams","Array","from","Set","driver","filteredDrivers","filter","matchesSearch","includes","matchesTeam","_jsxs","className","children","_jsx","ShimmerUI","type","count","placeholder","onChange","e","target","Card","header","imageAlt","_ref","onClick","hover","footer","hoverClasses","combinedClasses","trim","src","alt"],"sourceRoot":""}